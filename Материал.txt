Чтобы сделать любую игру, необходимо:
1. Возможность рисовать и обновлять изображение
Изображение, которое постоянно обновляется.
Но если на изображения нельзя влиять, то это фильм, поэтому нужна

2. Игровая логика, которая определяет что и где нужно рисовать на экране
ввод от игрока
ввод от других игроков (для многопользовательских игр)
логика поведения врагов
таймеры

Эти два момента должны взаимодействовать, чтобы картинка реагировала на действия игрока
нажали кнопку - игрок переместился, отпустили - игрок встал и не двигается.

Это основа любой игры.

Питон сам по себе не умеет рисовать изображения и показывать их нам (только print в консоль).
И он не умеет получать ввод от пользователя, который нам нужен (только input, который останавливает код).

Поэтому нам нужен один из модулей: Pygame, Pyglet, Arcade
Pygame - потому что популярный и потому что у нас такой мастер-класс. А ещё Pygame простой.

Использование Pygame:
Установка (pip install pygame)
_______
Инициализация Pygame (pygame.init())
отображение холста

игровой цикл
  рисование на холсте
  обработка событий (клавиатура, мышь)
  обновление холста

Деинициализация Pyagme(pygame.quit())
_______

Основная концепция Pygame - холст (поверхность для отображения), на котором мв можем рисовать
Холст имеет ширину (width) и высоту (height)

Игровой цикл позволяет создать динамическую смену изображений на холсте и не закрыть его.
В игровом цикле происходит реализация игровой логики и обновление изображения в соответствии ей.
В конце игрового цикла, перед выходом на новую итерацию, происходит отрисовка кадра.

Цикл обработки событий обрабатывает действия ирока: нажатия клавиш, движение миши или нажатие её кнопок.

_______
Код ниже создаст окно размером 576 на 1024 пикселя и отобразит его.

import pygame

pygame.init()
screen = pygame.display.set_mode((576, 1024))

while True:
    # изображение игрока
    # фоновое изображение
    pygame.display.update()  # Выводит на экран всё, что было нарисовано в цикле

Просто так, нажатием на крестик, окно закрыть не получится, потому что программа не знает как реагировать на нажатие
крестика на окошке.

Чтобы научить программу реагировать на нажатие крестика, добавим обработчик событий:

import pygame

pygame.init()
screen = pygame.display.set_mode((576, 1024))

while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()

    pygame.display.update()  # Выводит на экран всё, что было нарисовано в цикле

Теперь окно закрывается, но программа завершается с ошибкой, потому что при выходе из программы по pygame.quit() цикл
ещё не завершился полностью. Чтобы завершить цикл, понадобится библиотека sys:


sys даёт доступ к системным модулям

